import functools
import shutil
import requests
from bs4 import BeautifulSoup

url_base = 'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?'

    
class DBQuery:
    def __init__(self, query: str, db='pubmed', retmax=10000):
        """
        Initialize a DBQuery object.
        
        :param query: A term to search (eg. 'breast cancer')
        :param db: Database, one of 'pubmed' or 'pmc'
        :param retmax: Maximum number of results to fetch

        """
        if query == '':  # check explicitly for an empty string
            raise ValueError('Please provide a string')
        
        self.db = db
        self.query = '+'.join(query.split(' '))
        self.retmax = retmax
        self.url = url_base + 'db={}&term={}&retmax={}&usehistory=y' \
            .format(self.db, self.query, self.retmax)

    # IO
    @functools.lru_cache(maxsize=1)
    def fetch(self, filename, timeout=0.001) -> str:
        """
        Execute a fetch request from the database.

        :param timeout: Timeout parameter for Requests.get()

        :returns: Downloaded text
        :rtype: str

        """
        try:
            with open(filename, 'wb') as _file:
                with requests.get(self.query_url):
                    for chunk in stream.iter_lines():
                        if chunk:
                            soup = BeautifulSoup(chunk.content) \
                                   .find_all('abstract')
                            
                requests.raise_for_status()  # raise HTTP exception if occurs
        except requests.exceptions.RequestException:
            raise

        # json parsing
        soup = BeautifulSoup(doc.content)
        abstracts = soup.find_all('abstract')
        
